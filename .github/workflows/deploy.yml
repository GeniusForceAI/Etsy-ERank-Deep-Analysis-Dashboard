name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Debug repository contents
        run: |
          echo "Repository root contents:"
          ls -la
          echo "
Reports directory contents:"
          ls -la Reports/ || echo "Reports directory not found"
          echo "
Advanced dashboard exists?"
          [ -f Reports/advanced-dashboard.html ] && echo "Yes, file exists" || echo "No, file not found"
      
      - name: Create static GitHub Pages site
        run: |
          # Create simple site directory structure
          mkdir -p site
          
          # Copy everything from Reports directory to site directory if it exists
          if [ -d Reports ]; then
            cp -r Reports/* site/
          fi
          
          # Create a direct redirect in the root index.html
          cat > site/index.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <meta http-equiv="refresh" content="0; url=advanced-dashboard.html" />
            <title>Etsy Dashboard</title>
          </head>
          <body style="display: flex; justify-content: center; align-items: center; height: 100vh; font-family: Arial, sans-serif;">
            <div style="text-align: center;">
              <h1>Redirecting to Advanced Dashboard</h1>
              <p>If you are not redirected automatically, <a href="advanced-dashboard.html">click here</a>.</p>
            </div>
          </body>
          </html>
          EOL
          
          # Create .nojekyll file to prevent GitHub Pages from using Jekyll
          touch site/.nojekyll
          
          # Display final site contents
          echo "
Final site directory contents:"
          ls -la site/
      
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'site'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
